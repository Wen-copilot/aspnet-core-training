<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RestfulAPI</name>
    </assembly>
    <members>
        <member name="T:RestfulAPI.Controllers.AuthController">
            <summary>
            Authentication and authorization controller
            </summary>
        </member>
        <member name="M:RestfulAPI.Controllers.AuthController.Register(RestfulAPI.Models.RegisterRequest)">
            <summary>
            Register a new user
            </summary>
            <param name="request">Registration details</param>
            <returns>Authentication response with token</returns>
            <response code="200">User successfully registered</response>
            <response code="400">Invalid registration data or user already exists</response>
        </member>
        <member name="M:RestfulAPI.Controllers.AuthController.Login(RestfulAPI.Models.LoginRequest)">
            <summary>
            Login with email and password
            </summary>
            <param name="request">Login credentials</param>
            <returns>Authentication response with token</returns>
            <response code="200">Login successful</response>
            <response code="401">Invalid credentials</response>
        </member>
        <member name="M:RestfulAPI.Controllers.AuthController.GetProfile">
            <summary>
            Get current user profile
            </summary>
            <returns>User information</returns>
            <response code="200">Returns user profile</response>
            <response code="401">User not authenticated</response>
        </member>
        <member name="M:RestfulAPI.Controllers.AuthController.ChangePassword(RestfulAPI.Models.ChangePasswordRequest)">
            <summary>
            Change password for authenticated user
            </summary>
            <param name="request">Password change details</param>
            <returns>Success message</returns>
            <response code="200">Password changed successfully</response>
            <response code="400">Invalid request or current password incorrect</response>
            <response code="401">User not authenticated</response>
        </member>
        <member name="M:RestfulAPI.Controllers.AuthController.ValidateToken(System.String)">
            <summary>
            Validate JWT token
            </summary>
            <param name="token">JWT token to validate</param>
            <returns>Validation result</returns>
            <response code="200">Token is valid</response>
            <response code="401">Token is invalid or expired</response>
        </member>
        <member name="M:RestfulAPI.Controllers.AuthController.TestAuth">
            <summary>
            Test endpoint - requires authentication
            </summary>
            <returns>Success message with user info</returns>
        </member>
        <member name="M:RestfulAPI.Controllers.AuthController.TestAdminAuth">
            <summary>
            Test endpoint - requires Admin role
            </summary>
            <returns>Success message</returns>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.GetProducts(System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32,System.Int32)">
            <summary>
            Get all products with optional filtering and pagination
            </summary>
            <param name="category">Filter by category</param>
            <param name="minPrice">Minimum price filter</param>
            <param name="maxPrice">Maximum price filter</param>
            <param name="pageNumber">Page number for pagination</param>
            <param name="pageSize">Page size for pagination</param>
            <returns>Paginated list of products</returns>
            <response code="200">Returns the paginated list of products</response>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.GetProduct(System.Int32)">
            <summary>
            Get product by ID
            </summary>
            <param name="id">Product ID</param>
            <returns>Product details</returns>
            <response code="200">Returns the product</response>
            <response code="404">If the product is not found</response>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.CreateProduct(RestfulAPI.DTOs.CreateProductDto)">
            <summary>
            Create a new product
            </summary>
            <param name="createProductDto">Product creation data</param>
            <returns>Created product</returns>
            <response code="201">Returns the newly created product</response>
            <response code="400">If the request is invalid</response>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.UpdateProduct(System.Int32,RestfulAPI.DTOs.UpdateProductDto)">
            <summary>
            Update an existing product
            </summary>
            <param name="id">Product ID</param>
            <param name="updateProductDto">Updated product data</param>
            <returns>Updated product</returns>
            <response code="200">Returns the updated product</response>
            <response code="404">If the product is not found</response>
            <response code="400">If the request is invalid</response>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.PatchProduct(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{RestfulAPI.DTOs.UpdateProductDto})">
            <summary>
            Partially update a product using JSON Patch
            </summary>
            <param name="id">Product ID</param>
            <param name="patchDocument">JSON Patch document</param>
            <returns>Updated product</returns>
            <response code="200">Returns the updated product</response>
            <response code="404">If the product is not found</response>
            <response code="400">If the patch document is invalid</response>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.DeleteProduct(System.Int32)">
            <summary>
            Delete a product
            </summary>
            <param name="id">Product ID</param>
            <returns>No content</returns>
            <response code="204">Product successfully deleted</response>
            <response code="404">If the product is not found</response>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.GetCategories">
            <summary>
            Get product categories
            </summary>
            <returns>List of categories</returns>
            <response code="200">Returns the list of categories</response>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.GetSecureProducts">
            <summary>
            Get secure products (requires authentication)
            </summary>
            <returns>List of products for authenticated users</returns>
            <response code="200">Returns the list of products</response>
            <response code="401">If the user is not authenticated</response>
            <response code="403">If the user doesn't have required permissions</response>
        </member>
        <member name="M:RestfulAPI.Controllers.ProductsController.SearchProducts(System.String,System.Int32,System.Int32)">
            <summary>
            Search products by name or description
            </summary>
            <param name="query">Search query</param>
            <param name="pageNumber">Page number</param>
            <param name="pageSize">Page size</param>
            <returns>Search results</returns>
            <response code="200">Returns the search results</response>
        </member>
        <member name="T:RestfulAPI.Data.ApplicationDbContext">
            <summary>
            Application database context
            </summary>
        </member>
        <member name="T:RestfulAPI.Data.DataSeeder">
            <summary>
            Data seeder for development environment
            </summary>
        </member>
        <member name="M:RestfulAPI.Data.DataSeeder.SeedData(RestfulAPI.Data.ApplicationDbContext)">
            <summary>
            Seeds initial data into the database
            </summary>
        </member>
        <member name="T:RestfulAPI.DTOs.ProductDto">
            <summary>
            Product data transfer object
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.Id">
            <summary>
            Unique identifier for the product
            </summary>
            <example>1</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.Name">
            <summary>
            Product name
            </summary>
            <example>Laptop Computer</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.Description">
            <summary>
            Product description
            </summary>
            <example>High-performance laptop with 16GB RAM and 512GB SSD</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.Price">
            <summary>
            Product price in USD
            </summary>
            <example>999.99</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.Category">
            <summary>
            Product category
            </summary>
            <example>Electronics</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.StockQuantity">
            <summary>
            Available stock quantity
            </summary>
            <example>50</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.Sku">
            <summary>
            Product SKU (Stock Keeping Unit)
            </summary>
            <example>ELEC-LAP-001</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.IsActive">
            <summary>
            Indicates if the product is currently active
            </summary>
            <example>true</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.IsAvailable">
            <summary>
            Indicates if the product is available for sale
            </summary>
            <example>true</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.CreatedAt">
            <summary>
            Product creation timestamp
            </summary>
            <example>2024-01-15T10:30:00Z</example>
        </member>
        <member name="P:RestfulAPI.DTOs.ProductDto.UpdatedAt">
            <summary>
            Product last update timestamp
            </summary>
            <example>2024-01-20T15:45:00Z</example>
        </member>
        <member name="T:RestfulAPI.DTOs.CreateProductDto">
            <summary>
            DTO for creating a new product
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.CreateProductDto.Name">
            <summary>
            Product name
            </summary>
            <example>Wireless Mouse</example>
        </member>
        <member name="P:RestfulAPI.DTOs.CreateProductDto.Description">
            <summary>
            Product description
            </summary>
            <example>Ergonomic wireless mouse with precision tracking</example>
        </member>
        <member name="P:RestfulAPI.DTOs.CreateProductDto.Price">
            <summary>
            Product price in USD
            </summary>
            <example>29.99</example>
        </member>
        <member name="P:RestfulAPI.DTOs.CreateProductDto.Category">
            <summary>
            Product category
            </summary>
            <example>Accessories</example>
        </member>
        <member name="P:RestfulAPI.DTOs.CreateProductDto.StockQuantity">
            <summary>
            Initial stock quantity
            </summary>
            <example>100</example>
        </member>
        <member name="P:RestfulAPI.DTOs.CreateProductDto.Sku">
            <summary>
            Product SKU (Stock Keeping Unit)
            </summary>
            <example>ACC-MOU-002</example>
        </member>
        <member name="P:RestfulAPI.DTOs.CreateProductDto.IsActive">
            <summary>
            Indicates if the product is active
            </summary>
            <example>true</example>
        </member>
        <member name="T:RestfulAPI.DTOs.UpdateProductDto">
            <summary>
            DTO for updating an existing product
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.UpdateProductDto.Name">
            <summary>
            Product name
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.UpdateProductDto.Description">
            <summary>
            Product description
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.UpdateProductDto.Price">
            <summary>
            Product price in USD
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.UpdateProductDto.Category">
            <summary>
            Product category
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.UpdateProductDto.StockQuantity">
            <summary>
            Available stock quantity
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.UpdateProductDto.Sku">
            <summary>
            Product SKU (Stock Keeping Unit)
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.UpdateProductDto.IsActive">
            <summary>
            Indicates if the product is currently active
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.UpdateProductDto.IsAvailable">
            <summary>
            Indicates if the product is available for sale
            </summary>
        </member>
        <member name="T:RestfulAPI.DTOs.PagedResponse`1">
            <summary>
            Paginated response wrapper
            </summary>
            <typeparam name="T">Type of items in the response</typeparam>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.Data">
            <summary>
            Collection of items for the current page
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.PageNumber">
            <summary>
            Current page number
            </summary>
            <example>1</example>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.PageSize">
            <summary>
            Number of items per page
            </summary>
            <example>10</example>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.TotalPages">
            <summary>
            Total number of pages
            </summary>
            <example>5</example>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.TotalRecords">
            <summary>
            Total number of records
            </summary>
            <example>50</example>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.HasNextPage">
            <summary>
            Indicates if there is a next page
            </summary>
            <example>true</example>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.HasPreviousPage">
            <summary>
            Indicates if there is a previous page
            </summary>
            <example>false</example>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.NextPageUrl">
            <summary>
            URL to the next page (if available)
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.PagedResponse`1.PreviousPageUrl">
            <summary>
            URL to the previous page (if available)
            </summary>
        </member>
        <member name="T:RestfulAPI.DTOs.ApiResponse`1">
            <summary>
            Standard API response wrapper
            </summary>
            <typeparam name="T">Type of data in the response</typeparam>
        </member>
        <member name="P:RestfulAPI.DTOs.ApiResponse`1.Success">
            <summary>
            Indicates if the request was successful
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.ApiResponse`1.Message">
            <summary>
            Response message
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.ApiResponse`1.Data">
            <summary>
            Response data
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.ApiResponse`1.Errors">
            <summary>
            Collection of errors (if any)
            </summary>
        </member>
        <member name="P:RestfulAPI.DTOs.ApiResponse`1.Timestamp">
            <summary>
            Timestamp of the response
            </summary>
        </member>
        <member name="M:RestfulAPI.DTOs.ApiResponse`1.SuccessResult(`0,System.String)">
            <summary>
            Creates a successful response
            </summary>
        </member>
        <member name="M:RestfulAPI.DTOs.ApiResponse`1.ErrorResult(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creates an error response
            </summary>
        </member>
        <member name="T:RestfulAPI.Filters.LoggingActionFilter">
            <summary>
            Action filter for logging API calls and performance
            </summary>
        </member>
        <member name="T:RestfulAPI.Filters.ValidationFilter">
            <summary>
            Action filter for automatic model validation
            </summary>
        </member>
        <member name="T:RestfulAPI.Middleware.GlobalExceptionMiddleware">
            <summary>
            Global exception handling middleware
            </summary>
        </member>
        <member name="T:RestfulAPI.Middleware.RateLimitingMiddleware">
            <summary>
            Simple rate limiting middleware
            </summary>
        </member>
        <member name="T:RestfulAPI.Middleware.EnableRateLimitingAttribute">
            <summary>
            Attribute to enable rate limiting on specific endpoints
            </summary>
        </member>
        <member name="T:RestfulAPI.MinimalApiExample">
            <summary>
            Minimal API example for product management
            This class demonstrates how to implement a RESTful API using minimal APIs in ASP.NET Core
            </summary>
        </member>
        <member name="M:RestfulAPI.MinimalApiExample.ConfigureMinimalApis(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Extension method to register minimal API endpoints in Program.cs
            Usage: app.MapProductEndpoints();
            </summary>
        </member>
        <member name="T:RestfulAPI.Models.ApiResponse`1">
            <summary>
            Standard API response wrapper
            </summary>
            <typeparam name="T">Type of data being returned</typeparam>
        </member>
        <member name="T:RestfulAPI.Models.ApiProblemDetails">
            <summary>
            Problem details for API errors following RFC 7807
            </summary>
        </member>
        <member name="T:RestfulAPI.Models.LoginRequest">
            <summary>
            Model for user login request
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.LoginRequest.Email">
            <summary>
            User's email address
            </summary>
            <example>user@yourdomain.com</example>
        </member>
        <member name="P:RestfulAPI.Models.LoginRequest.Password">
            <summary>
            User's password
            </summary>
            <example>SecurePassword123!</example>
        </member>
        <member name="T:RestfulAPI.Models.RegisterRequest">
            <summary>
            Model for user registration request
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.RegisterRequest.Email">
            <summary>
            User's email address
            </summary>
            <example>newuser@yourdomain.com</example>
        </member>
        <member name="P:RestfulAPI.Models.RegisterRequest.Password">
            <summary>
            User's password
            </summary>
            <example>SecurePassword123!</example>
        </member>
        <member name="P:RestfulAPI.Models.RegisterRequest.ConfirmPassword">
            <summary>
            Password confirmation
            </summary>
            <example>SecurePassword123!</example>
        </member>
        <member name="P:RestfulAPI.Models.RegisterRequest.FullName">
            <summary>
            User's full name
            </summary>
            <example>John Doe</example>
        </member>
        <member name="T:RestfulAPI.Models.AuthResponse">
            <summary>
            Model for authentication response
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.AuthResponse.Token">
            <summary>
            JWT access token
            </summary>
            <example>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</example>
        </member>
        <member name="P:RestfulAPI.Models.AuthResponse.ExpiresAt">
            <summary>
            Token expiration time in UTC
            </summary>
            <example>2024-01-20T15:30:00Z</example>
        </member>
        <member name="P:RestfulAPI.Models.AuthResponse.User">
            <summary>
            User information
            </summary>
        </member>
        <member name="T:RestfulAPI.Models.UserInfo">
            <summary>
            Basic user information
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.UserInfo.Id">
            <summary>
            User ID
            </summary>
            <example>123</example>
        </member>
        <member name="P:RestfulAPI.Models.UserInfo.Email">
            <summary>
            User's email
            </summary>
            <example>user@yourdomain.com</example>
        </member>
        <member name="P:RestfulAPI.Models.UserInfo.FullName">
            <summary>
            User's full name
            </summary>
            <example>John Doe</example>
        </member>
        <member name="P:RestfulAPI.Models.UserInfo.Roles">
            <summary>
            User's roles
            </summary>
            <example>["User", "Admin"]</example>
        </member>
        <member name="T:RestfulAPI.Models.ChangePasswordRequest">
            <summary>
            Model for password change request
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.ChangePasswordRequest.CurrentPassword">
            <summary>
            Current password
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.ChangePasswordRequest.NewPassword">
            <summary>
            New password
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.ChangePasswordRequest.ConfirmNewPassword">
            <summary>
            New password confirmation
            </summary>
        </member>
        <member name="T:RestfulAPI.Models.User">
            <summary>
            User entity for authentication
            </summary>
        </member>
        <member name="T:RestfulAPI.Models.Role">
            <summary>
            Role entity
            </summary>
        </member>
        <member name="T:RestfulAPI.Models.UserRole">
            <summary>
            Many-to-many relationship between users and roles
            </summary>
        </member>
        <member name="T:RestfulAPI.Models.Product">
            <summary>
            Product entity model
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.Id">
            <summary>
            Unique identifier
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.Name">
            <summary>
            Product name
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.Description">
            <summary>
            Product description
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.Price">
            <summary>
            Product price
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.Category">
            <summary>
            Product category
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.StockQuantity">
            <summary>
            Stock quantity
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.Sku">
            <summary>
            Stock keeping unit
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.IsActive">
            <summary>
            Indicates if the product is active
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.IsAvailable">
            <summary>
            Indicates if the product is available for sale
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.IsDeleted">
            <summary>
            Soft delete flag
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.CreatedAt">
            <summary>
            Creation timestamp
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.UpdatedAt">
            <summary>
            Last update timestamp
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.CreatedBy">
            <summary>
            User who created the product
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.UpdatedBy">
            <summary>
            User who last updated the product
            </summary>
        </member>
        <member name="P:RestfulAPI.Models.Product.RowVersion">
            <summary>
            Version for optimistic concurrency
            </summary>
        </member>
        <member name="T:RestfulAPI.Services.IProductService">
            <summary>
            Product service interface defining business operations
            </summary>
        </member>
        <member name="T:RestfulAPI.Services.ProductService">
            <summary>
            Product service implementation with business logic
            </summary>
        </member>
        <member name="T:RestfulAPI.Services.ITokenService">
            <summary>
            Interface for JWT token generation and validation
            </summary>
        </member>
        <member name="T:RestfulAPI.Services.TokenService">
            <summary>
            Service for handling JWT tokens
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.TokenService.GenerateToken(RestfulAPI.Models.User,System.Collections.Generic.IList{System.String})">
            <summary>
            Generates a JWT token for the specified user
            </summary>
            <param name="user">The user to generate token for</param>
            <param name="roles">User's roles</param>
            <returns>JWT token string</returns>
        </member>
        <member name="M:RestfulAPI.Services.TokenService.ValidateToken(System.String)">
            <summary>
            Validates a JWT token and returns the claims principal
            </summary>
            <param name="token">The token to validate</param>
            <returns>ClaimsPrincipal if valid, null otherwise</returns>
        </member>
        <member name="T:RestfulAPI.Services.IUserService">
            <summary>
            Interface for user management operations
            </summary>
        </member>
        <member name="T:RestfulAPI.Services.UserService">
            <summary>
            Service for managing user operations
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.GetByEmailAsync(System.String)">
            <summary>
            Get user by email
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.GetByIdAsync(System.Int32)">
            <summary>
            Get user by ID
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.CreateAsync(RestfulAPI.Models.RegisterRequest)">
            <summary>
            Create a new user
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.ValidatePasswordAsync(RestfulAPI.Models.User,System.String)">
            <summary>
            Validate user password
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.ChangePasswordAsync(RestfulAPI.Models.User,System.String,System.String)">
            <summary>
            Change user password
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.GetUserRolesAsync(RestfulAPI.Models.User)">
            <summary>
            Get user roles
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.UpdateLastLoginAsync(RestfulAPI.Models.User)">
            <summary>
            Update user's last login time
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.HashPassword(System.String)">
            <summary>
            Hash a password using PBKDF2
            </summary>
        </member>
        <member name="M:RestfulAPI.Services.UserService.VerifyPassword(System.String,System.String)">
            <summary>
            Verify a password against a hash
            </summary>
        </member>
    </members>
</doc>
